[project]
name = "xyra"
version = "0.1.9"
description = "High Performance Frameworks, Easy to learn and Ready for Production"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
authors = [
    {name = "Xyra Team", email = "team@xyra.dev"},
]
maintainers = [
    {name = "Xyra Team", email = "team@xyra.dev"},
]
keywords = ["web", "framework", "async", "fast", "python"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dependencies = [
    "socketify",
    "jinja2",
    "multidict",
    "watchfiles",
    "orjson>=3.11.3; python_implementation != 'PyPy'",
    "ujson; python_implementation == 'PyPy'",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-tornasync>=0.6.0.post2",
    "pytest-twisted>=0.8.0",
    "pytest-trio>=0.8.0",
    "anyio>=4.11.0",
    "twisted>=25.5.0",
    "ruff>=0.13.3",
    "mypy",
    "black",
    "isort",
    "bandit"
]
docs = [
    "mkdocs",
    "mkdocs-material",
]

[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project.urls]
Homepage = "https://github.com/xyra-python/xyra"
Documentation = "https://xyra.dev/docs"
Repository = "https://github.com/xyra-python/xyra"
Issues = "https://github.com/xyra-python/xyra/issues"
Changelog = "https://github.com/xyra-python/xyra/blob/main/CHANGELOG.md"

[project.scripts]
xyra = "xyra.__main__:main"

[tool.setuptools]
zip-safe = false

[tool.setuptools.packages.find]
include = ["xyra*"]
exclude = ["tests*", "docs*", "example*", "bench*"]

[tool.setuptools.package-data]
xyra = ["py.typed"]

[tool.ruff]
line-length = 88
target-version = "py311"
exclude = ["benchmark"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"] # assert false

[tool.black]
line-length = 88
target-version = ['py311']
exclude = "benchmark"

[tool.isort]
profile = "black"
line_length = 88
skip = ["benchmark"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = ["benchmark"]

[[tool.mypy.overrides]]
module = ["socketify.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "asyncio: marks tests as async tests",
]

[tool.pytest-asyncio]
mode = "strict"

[tool.coverage.run]
source = ["xyra"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "xyra/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
